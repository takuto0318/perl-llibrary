#!/usr/bin/perl
#
# KMyacc parser prototype file for perl.
# This file is public domain.


################################################################
# This file is automatically generated.
################################################################


$YYERRTOK = 256;
$EOF = 257;
$IDENTIFIER = 258;
$NATURAL = 259;





@yytranslate = (
      0,   19,   19,   19,   19,   19,   19,   19,   19,   19,
     19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
     19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
     19,   19,   19,   10,   19,   19,    9,   15,   18,   19,
     12,   13,   11,   19,   19,    8,   14,   19,   19,   19,
     19,   19,   19,   19,   19,   19,   19,   19,    6,   19,
     19,   19,    5,    7,   19,   19,   19,   19,   19,   19,
     19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
     19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
     19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
     19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
     19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
     19,   19,   19,   16,    4,   17,   19,   19,   19,   19,
     19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
     19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
     19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
     19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
     19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
     19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
     19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
     19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
     19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
     19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
     19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
     19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
     19,   19,   19,   19,   19,   19,    1,   19,    2,    3
  );

$YYBADCH = 19;
$YYMAXLEX = 260;
$YYTERMS = 19;
$YYNONTERMS = 13;

@yyaction = (
     51,   12,    0,   55,    4,   56,   13,    6,    7,   12,
      2,   54,   50,   24,   13,    6,   35,   23,    3,   37,
      6,    5,   25,    9,   18,    0,   38,    0,-32766,    0,
     42,   41,    0,    0,   44,    0,    0,    0,    0,    0,
     22
  );

$YYLAST = 41;

@yycheck = (
      2,    2,    0,    2,    5,    2,    7,    8,   10,    2,
     12,    2,   14,    2,    7,    8,    3,   16,    4,    9,
      8,    6,   17,   15,    8,   -1,    9,   -1,   10,   -1,
     11,   11,   -1,   -1,   13,   -1,   -1,   -1,   -1,   -1,
     18
  );

@yybase = (
      7,   -1,    7,    7,    7,   12,   -2,   18,   22,    1,
      8,   22,   15,   16,    2,   14,   10,   20,   13,   17,
     19,   21,    3,   11,    5,    9,   -2,   -2,   -2,   -2,
     -2,   -2,    0,   -2,    8
  );

$YY2TBLSTATE = 9;

@yydefault = (
  32767,    6,32767,32767,32767,32767,32767,32767,   20,32767,
     27,   21,   25,32767,32767,    1,   13,   17,32767,   10,
     14,32767,32767,32767,32767,32767
  );



@yygoto = (
     31,   33,   28,   30,   21,   20,   48,   19,    0,    0,
      0,    0,    0,   52
  );

$YYGLAST = 14;

@yygcheck = (
      3,    5,    3,    3,    1,    7,   11,    6,   -1,   -1,
     -1,   -1,   -1,   10
  );

@yygbase = (
      0,    2,    0,   -1,    0,   -4,    1,   -2,    0,    0,
      3,   -5,    0
  );

@yygdefault = (
  -32768,   14,   15,   29,    1,   34,   16,   17,   45,    8,
     11,   49,   10
  );

@yylhs = (
      0,    1,    2,    2,    3,    3,    3,    4,    4,    4,
      5,    5,    5,    5,    6,    6,    6,    6,    7,    7,
      8,    8,    8,    8,    9,    9,   10,   10,   12,   12,
     11
  );

@yylen = (
      1,    1,    3,    1,    3,    2,    1,    3,    1,    3,
      2,    2,    3,    1,    2,    2,    3,    1,    3,    1,
      1,    2,    3,    2,    1,    1,    2,    1,    5,    2,
      2
  );

$YYSTATES = 47;
$YYNLSTATES = 26;
$YYINTERRTOK = 1;
$YYUNEXPECTED = 32767;
$YYDEFAULT = -32766;

sub yyparse {
    my @yyastk = {};
    my @yysstk = {};

    my ($yyn, $yyl);
    my $yystate = 0;
    my $yychar = -1;
    my $yysp = 0;
    my $yyerrflag = 0;

    $yysstk[$yysp] = 0;
    for (;;) {
        if ($yybase[$yystate] == 0) {
	    $yyn = $yydefault[$yystate];
	} else {
	    if ($yychar < 0) {
		$yychar = &yylex();
		$yychar = 0 if ($yychar <= 0);
		$yychar = $yychar < $YYMAXLEX ? $yytranslate[$yychar] : $YYBADCH;
            }
	    if ((($yyn = $yybase[$yystate] + $yychar) >= 0
		 && $yyn < $YYLAST && $yycheck[$yyn] == $yychar
		 || ($yystate < $YY2TBLSTATE
		     && ($yyn = $yybase[$yystate + $YYNLSTATES] + $yychar) >= 0
		     && $yyn < $YYLAST && $yycheck[$yyn] == $yychar))
		&& ($yyn = $yyaction[$yyn]) != $YYDEFAULT) {

		if ($yyn > 0) {
		    # shift

		    $yysp++;

		    $yysstk[$yysp] = $yystate = $yyn;
		    $yyastk[$yysp] = $yylval;
		    $yychar = -1;
          
		    $yyerrflag-- if ($yyerrflag > 0);
			
		    next if ($yyn < $YYNLSTATES);
            
		    # yyn >= YYNLSTATES means shift-and-reduce
		    $yyn -= $YYNLSTATES;
		} else {
		    $yyn = -$yyn;
		}
	    } else {
		$yyn = $yydefault[$yystate];
	    }
	}

	for (;;) {
	    # reduce/error
	    if ($yyn == 0) {
		# accept
		return 0;
	    }
	    elsif ($yyn != $YYUNEXPECTED) {
		# reduce
		$yyl = $yylen[$yyn];
		$yyval = $yyastk[$yysp-$yyl+1];
		# Following line will be replaced by reduce actions
		switch: {
		    goto ((
			   'defact',
			   'act1',
			   'act2',
			   'act3',
			   'act4',
			   'act5',
			   'act6',
			   'act7',
			   'act8',
			   'act9',
			   'act10',
			   'act11',
			   'act12',
			   'act13',
			   'act14',
			   'act15',
			   'act16',
			   'act17',
			   'act18',
			   'act19',
			   'act20',
			   'act21',
			   'act22',
			   'act23',
			   'act24',
			   'act25',
			   'act26',
			   'act27',
			   'act28',
			   'act29',
			   'act30',
			   '')[$yyn]);
		act1: {$yyval={'type' => 'NT:start:1', 'elem'=>[$yyastk[$yysp-(1-1)]]};} last switch;
		act2: {$yyval={'type' => 'NT:select:1', 'elem'=>[$yyastk[$yysp-(3-1)],$yyastk[$yysp-(3-2)],$yyastk[$yysp-(3-3)]]};} last switch;
		act3: {$yyval={'type' => 'NT:select:2', 'elem'=>[$yyastk[$yysp-(1-1)]]};} last switch;
		act4: {$yyval={'type' => 'NT:family:1', 'elem'=>[$yyastk[$yysp-(3-1)],$yyastk[$yysp-(3-2)],$yyastk[$yysp-(3-3)]]};} last switch;
		act5: {$yyval={'type' => 'NT:family:2', 'elem'=>[$yyastk[$yysp-(2-1)],$yyastk[$yysp-(2-2)]]};} last switch;
		act6: {$yyval={'type' => 'NT:family:3', 'elem'=>[$yyastk[$yysp-(1-1)]]};} last switch;
		act7: {$yyval={'type' => 'NT:_label:1', 'elem'=>[$yyastk[$yysp-(3-1)],$yyastk[$yysp-(3-2)],$yyastk[$yysp-(3-3)]]};} last switch;
		act8: {$yyval={'type' => 'NT:_label:2', 'elem'=>[$yyastk[$yysp-(1-1)]]};} last switch;
		act9: {$yyval={'type' => 'NT:_label:3', 'elem'=>[$yyastk[$yysp-(3-1)],$yyastk[$yysp-(3-2)],$yyastk[$yysp-(3-3)]]};} last switch;
		act10: {$yyval={'type' => 'NT:pre_node_option:1', 'elem'=>[$yyastk[$yysp-(2-1)],$yyastk[$yysp-(2-2)]]};} last switch;
		act11: {$yyval={'type' => 'NT:pre_node_option:2', 'elem'=>[$yyastk[$yysp-(2-1)],$yyastk[$yysp-(2-2)]]};} last switch;
		act12: {$yyval={'type' => 'NT:pre_node_option:3', 'elem'=>[$yyastk[$yysp-(3-1)],$yyastk[$yysp-(3-2)],$yyastk[$yysp-(3-3)]]};} last switch;
		act13: {$yyval={'type' => 'NT:pre_node_option:4', 'elem'=>[$yyastk[$yysp-(1-1)]]};} last switch;
		act14: {$yyval={'type' => 'NT:pre_node_option_2:1', 'elem'=>[$yyastk[$yysp-(2-1)],$yyastk[$yysp-(2-2)]]};} last switch;
		act15: {$yyval={'type' => 'NT:pre_node_option_2:2', 'elem'=>[$yyastk[$yysp-(2-1)],$yyastk[$yysp-(2-2)]]};} last switch;
		act16: {$yyval={'type' => 'NT:pre_node_option_2:3', 'elem'=>[$yyastk[$yysp-(3-1)],$yyastk[$yysp-(3-2)],$yyastk[$yysp-(3-3)]]};} last switch;
		act17: {$yyval={'type' => 'NT:pre_node_option_2:4', 'elem'=>[$yyastk[$yysp-(1-1)]]};} last switch;
		act18: {$yyval={'type' => 'NT:pre_node:1', 'elem'=>[$yyastk[$yysp-(3-1)],$yyastk[$yysp-(3-2)],$yyastk[$yysp-(3-3)]]};} last switch;
		act19: {$yyval={'type' => 'NT:pre_node:2', 'elem'=>[$yyastk[$yysp-(1-1)]]};} last switch;
		act20: {$yyval={'type' => 'NT:node:1', 'elem'=>[$yyastk[$yysp-(1-1)]]};} last switch;
		act21: {$yyval={'type' => 'NT:node:2', 'elem'=>[$yyastk[$yysp-(2-1)],$yyastk[$yysp-(2-2)]]};} last switch;
		act22: {$yyval={'type' => 'NT:node:3', 'elem'=>[$yyastk[$yysp-(3-1)],$yyastk[$yysp-(3-2)],$yyastk[$yysp-(3-3)]]};} last switch;
		act23: {$yyval={'type' => 'NT:node:4', 'elem'=>[$yyastk[$yysp-(2-1)],$yyastk[$yysp-(2-2)]]};} last switch;
		act24: {$yyval={'type' => 'NT:type_name:1', 'elem'=>[$yyastk[$yysp-(1-1)]]};} last switch;
		act25: {$yyval={'type' => 'NT:type_name:2', 'elem'=>[$yyastk[$yysp-(1-1)]]};} last switch;
		act26: {$yyval={'type' => 'NT:val_rep:1', 'elem'=>[$yyastk[$yysp-(2-1)],$yyastk[$yysp-(2-2)]]};} last switch;
		act27: {$yyval={'type' => 'NT:val_rep:2', 'elem'=>[$yyastk[$yysp-(1-1)]]};} last switch;
		act28: {$yyval={'type' => 'NT:val:1', 'elem'=>[$yyastk[$yysp-(5-1)],$yyastk[$yysp-(5-2)],$yyastk[$yysp-(5-3)],$yyastk[$yysp-(5-4)],$yyastk[$yysp-(5-5)]]};} last switch;
		act29: {$yyval={'type' => 'NT:val:2', 'elem'=>[$yyastk[$yysp-(2-1)],$yyastk[$yysp-(2-2)]]};} last switch;
		act30: {$yyval={'type' => 'NT:place:1', 'elem'=>[$yyastk[$yysp-(2-1)],$yyastk[$yysp-(2-2)]]};} last switch;
		defact: last switch;
		}
		# Goto - shift nonterminal
		$yysp -= $yyl;
		$yyn = $yylhs[$yyn];
		if (($yyp = $yygbase[$yyn] + $yysstk[$yysp]) >= 0
		    && $yyp < $YYGLAST && $yygcheck[$yyp] == $yyn) {
		    $yystate = $yygoto[$yyp];
		} else {
    		    $yystate = $yygdefault[$yyn];
		}
          
		$yysp++;

		$yysstk[$yysp] = $yystate;
	        $yyastk[$yysp] = $yyval;
	    }
	    else {
		# error
		if ($yyerrflag == 3) {
		    if ($yychar == 0) { return 1; }
		    $yychar = -1;
		} else {
		    if ($yyerrflag == 0) {
			&yyerror("syntax error");
		    }
		    $yyerrflag = 3;
		    # Pop until error-expecting state uncovered
		    while (!(($yyn = $yybase[$yystate] + $YYINTERRTOK) >= 0
			      && $yyn < $YYLAST && $yycheck[$yyn] == $YYINTERRTOK
			      || ($yystate < $YY2TBLSTATE
				  && ($yyn = $yybase[$yystate + $YYNLSTATES] + $YYINTERRTOK) >= 0
				  && $yyn < $YYLAST && $yycheck[$yyn] == $YYINTERRTOK))) {
			if ($yysp <= 0) { return 1; }
			$yystate = $yysstk[--$yysp];
		    }
		    $yyn = $yyaction[$yyn];
		    $yysstk[++$yysp] = $yystate = $yyn;
		}
	    }
	    last if ($yystate < $YYNLSTATES);
	    # >= $YYNLSTATES means shift-and-reduce
	    $yyn = $yystate - $YYNLSTATES;
	}
    }
    die "Cannot happen: control reached here.\n";
}


################################################################
# 3rd part of yacc file
################################################################


1;


