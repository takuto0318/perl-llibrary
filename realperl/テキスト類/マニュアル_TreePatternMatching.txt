・木のパターンによるマッチング


サブルーチン:TreePatternMatching
引数1：	ツリーパターン
引数2:	走査対象の木
戻り値:	PatternMatchingObject型オブジェクトの一覧

・ツリーパターンで用いる記号
(ノード名	…A Bと半角スペースで区切ると兄弟関係となる。)

>	…親子関係。「A > B」とすると、BはAの子供となる。
-	…サブツリーの重複マッチングを認める(別記)
#	…サブ属性の定義
{ }	…サブ属性のキーを定義(省略時は"val")
##	…プレースの定義(別記)

!	…エクストラメーション。ノードに前置して否定。「A > !B」ならAの子はB以外
$	…ドル。子要素の右端を示す。「A > B C$」ならCより後に兄弟ノードがあってはならない。
ラベル：	…ラベル、コロン。再帰的な繰り返し表現。ラベルは自由に名前を付け、記法内で再度指定されるとラベルの個所までジャンプする
	　　「A > label:( B > C  label | D ) 」  なら A > 後に(B > C  D) が来るまで(B > C B > C  B > ...)を繰り返す
?:	…ラベル名を省略した再帰。(A > ((?-2) | B )なら Aに再帰する。A > A > A > ... > A > Bにマッチ。

・木のパターンマッチング記述例

以下のようなパターンで表現されるサブツリーに一致する個所を抽出する。
入力例「A  > B C D > E」
	A
	|-------	B
	|-------	C
	|-------	D
		|-------	E
抽出されるノードはルートのAに一致したノードである。


親子の連続はラベルを用いて表現する。
「label01:(A > label01 | C)」
	A
	|-------	B
		|-------	A
			|-------	B
				|-------	A
～～～～～～～～～～～～～～～～～～～～～～
					|-------	A
						|-------	B
							|-------	C


・戻り値(結果)
PatternMatchingObject型のリスト(へのリファレンス)を返す。
PatternMatchingObjectは実質的にハッシュであり、①マッチ個所のルートノード②プレースごとのマッチ個所、の要素を持っている。

・使用例

$results = TreePatternMatching

$results = TreePatternMatching($code, $tree);


・未実装機能

①子要素の並びには*など正規表現的な記法が使える。
*	…アスタリスク。子要素の繰り返し表現。「A > B* C」ならBは0個以上で何個でもok

入力例「A  > B C* D」
	A
	|-------	B
	|-------	C
	|-------	C
	|-------	C
～～～～～～～～～～～～～～～～～～～
	|-------	C
	|-------	D
Cは0個で「A > B D」と同じマッチも含む。

